% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construct_diff.R
\name{construct_diff}
\alias{construct_diff}
\title{Display diff of object definitions}
\usage{
construct_diff(
  target,
  current,
  data = NULL,
  pipe = c("base", "magrittr"),
  check = TRUE,
  max_atomic = NULL,
  max_body = NULL,
  env_as_list = TRUE,
  ignore_srcref = TRUE,
  mode = c("sidebyside", "auto", "unified", "context"),
  ...
)
}
\arguments{
\item{target}{the reference object}

\item{current}{the object being compared to \code{target}}

\item{data}{named list of objects we don't want to deparse, can also be a package
name and its namespace and datasets will be used to look for objects. Both can
be combined so you can provide a list of named objects and unnamed namespaces.}

\item{pipe}{Which pipe to use, either "base" or "magrittr"}

\item{check}{Boolean. Whether to check if the created code reproduces the object
using \code{waldo::compare()}}

\item{max_atomic}{maximum number of elements of atomic vectors to print, forces check to \code{FALSE}}

\item{max_body}{maximum number of calls to show from a function's body, forces check to \code{FALSE}}

\item{env_as_list}{translate environments to \code{new.env()} rather than \code{as.environment(list(...))}}

\item{mode}{passed to \code{diffobj::diffChr()}, with a different default}

\item{...}{additional parameters passed to \code{diffobj::diffChr()}}
}
\value{
Returns \code{NULL} invisibly, called for side effects
}
\description{
Display diff of object definitions
}
\examples{
\dontrun{
# some object print the same though they're differemt
# `construct_diff()` shows how they differ :
df1 <- data.frame(a=1, b = "x")
df2 <- data.frame(a=1L, b = "x", stringsAsFactors = TRUE)
attr(df2, "some_attribute") <- "a value"
df1
df2
construct_diff(df1, df2)


# Those are made easy to compare
construct_diff(substr, substring)
construct_diff(month.abb, month.name)

# more examples borrowed from {waldo} package
construct_diff(c("a", "b", "c"), c("a", "B", "c"))
construct_diff(c("X", letters), c(letters, "X"))
construct_diff(list(factor("x")), list(1L))
construct_diff(df1, df2)
x <- list(a = list(b = list(c = list(structure(1, e = 1)))))
y <- list(a = list(b = list(c = list(structure(1, e = "a")))))
construct_diff(x, y)
}
}
